//
//  CompleteProfilePresenter.swift
//  BookLover
//
//  Created by ios 7 on 10/05/18.
//  Copyright (c) 2018 iOS Team. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CompleteProfilePresentationLogic
{
  func presentStateResponse(response: ApiResponse)
    func presentUserInfoResponse(response: ApiResponse, isUpdating: Bool)
  func presentUpdateProfileResponse(response: ApiResponse)
}

class CompleteProfilePresenter: CompleteProfilePresentationLogic
{
    
    
  weak var viewController: CompleteProfileDisplayLogic?
  
  // MARK: Do something
  
  func presentStateResponse(response: ApiResponse)
  {

    if response.code == SuccessCode {

        var stateList = [CompleteProfile.ViewModel.StateData]()

        let data = response.result as! NSDictionary

        if let list = (data["states"] as? [[String:Any]]) {

            for obj in list {

                let stateData = CompleteProfile.ViewModel.StateData(
                    id: obj["id"] as? Int16,
                    name: obj["name"] as? String,
                    country_id: obj["country_id"] as? Int16)
                stateList.append(stateData)
            }
        }

        viewController?.displayStateData(viewModel: CompleteProfile.ViewModel(
            countryList: nil,
            stateList: stateList,
            error: nil))

    } else {
        viewController?.displayStateData(viewModel: CompleteProfile.ViewModel(
            countryList: nil,
            stateList: nil,
            error: response.error))
    }

//    let viewModel = CompleteProfile.ViewModel()
//    viewController?.displaySomething(viewModel: viewModel)
  }
    
    func presentUserInfoResponse(response: ApiResponse, isUpdating: Bool) {
        
        var userData = CompleteProfile.UserInfo()
        if response.code == SuccessCode {
            
            let resultDict = response.result as! NSDictionary
            let userInfo = resultDict["userInfo"] as! NSDictionary
            userData = CompleteProfile.UserInfo(
                name: userInfo["firstname"] as? String ?? "",
                lastName: userInfo["lastname"] as? String ?? "",
                about: userInfo["about"] as? String ?? "",
                gender: userInfo["gender"] as? String ?? "",
                state: userInfo["state"] as? String ?? "",
                country: userInfo["country"] as? String ?? "",
                user_image: userInfo["user_image"] as? String ?? "",
                age: userInfo["age"] as? Int,
                error: nil)
            
        } else {
            
            userData = CompleteProfile.UserInfo(
                name: nil,
                lastName: nil,
                about: nil,
                gender: nil,
                state: nil,
                country: nil,
                user_image: nil,
                age: nil,
                error: response.error)
        }
        
        viewController?.displayUserData(viewModel: userData, isUpdated: isUpdating)
    }
    
    func presentUpdateProfileResponse(response: ApiResponse) {
        
        var updateProfile = CompleteProfile.UpdateProfile()
        if response.code == SuccessCode {
            updateProfile = CompleteProfile.UpdateProfile(result: localizedTextFor(key: GeneralValidations.ProfileUpadtedKey.rawValue), error: nil)
        } else {
            updateProfile = CompleteProfile.UpdateProfile(result: "", error: response.error)
        }
        viewController?.displayUpdateProfile(viewModel: updateProfile)
    }
    
}
