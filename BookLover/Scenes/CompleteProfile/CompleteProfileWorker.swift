//
//  CompleteProfileWorker.swift
//  BookLover
//
//  Created by ios 7 on 10/05/18.
//  Copyright (c) 2018 iOS Team. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Alamofire

class CompleteProfileWorker
{
    func hitCountryApi(apiResponse:@escaping(responseHandler)) {
        
        NetworkingWrapper.sharedInstance.connect(urlEndPoint: ApiEndPoints.country, httpMethod: .get) { (response) in
            apiResponse(response)
        }
    }
    
    func hitStateApi(request: CompleteProfile.Request.State ,apiResponse:@escaping(responseHandler)) {
        
        let endUrl = ApiEndPoints.state + request.countryId! + ".json"
        NetworkingWrapper.sharedInstance.connect(urlEndPoint: endUrl, httpMethod: .get) { (response) in
            apiResponse(response)
        }
    }
    
    func hitUserInfoApi(request: CompleteProfile.Request.UserInfo ,apiResponse:@escaping(responseHandler)) {
        
        let hed = CommonFunctions.sharedInstance.getHeaders()
        NetworkingWrapper.sharedInstance.connect(urlEndPoint: ApiEndPoints.userInfo, httpMethod: .post, headers: hed, parameters: ["id":CommonFunctions.sharedInstance.getUserId()], encoding: nil) { (response) in
            apiResponse(response)
        }

    }
    
    func hitUpdateProfileApi(request: CompleteProfile.Request.UpdateProfile ,apiResponse:@escaping(responseHandler)) {
        
        let endUrl = ApiEndPoints.updateProfile
        
        let token = Configurator.tokenBearer + (userDefault.value(forKeyPath: userDefualtKeys.user_Token.rawValue) as! String)
        let headersArray:HTTPHeaders = ["Authorization": token, "Content-Type":"application/json"]
        
        var str64 = ""
        if (request.user_image) != nil {
            let imageData = UIImageJPEGRepresentation(request.user_image!, 0.5)
            str64 = imageData!.base64EncodedString(options: .endLineWithCarriageReturn)
            str64 = "data:image/jpg;base64,\(str64)"
            str64 = str64.replacingOccurrences(of: "\n", with: "")
            str64 = str64.trimmingCharacters(in: CharacterSet.whitespaces)
            str64 = str64.replacingOccurrences(of: " ", with: "")
        }
        
        
        
        let param = ["firstname": request.name!, "lastname": request.lastName!, "id":request.user_Id!, "gender":request.gender!, "age":request.age!, "country":request.country!,"state":request.state!,"user_image":str64, "about":request.about!,]
        
        NetworkingWrapper.sharedInstance.connect(urlEndPoint: endUrl, httpMethod: .put, headers: headersArray, parameters: param, encoding: nil) { (response) in
            apiResponse(response)
        }
    }
}

