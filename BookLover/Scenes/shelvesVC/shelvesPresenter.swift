//
//  shelvesPresenter.swift
//  BookLover
//
//  Created by Nitesh Chauhan on 6/5/18.
//  Copyright (c) 2018 iOS Team. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol shelvesPresentationLogic
{
    func presentApiResponse(response: ApiResponse, shelfStatus: Int,IspopUp:Bool)
    func presenHMsegment()
    
}

class shelvesPresenter: shelvesPresentationLogic
{
    
    
    
  // Its for HMsegment Setup
    func presenHMsegment() {
        viewController?.displayHMsegment()
    }
    
    
    weak var viewController: shelvesDisplayLogic?
    
    // MARK: Do something
    
    func presentApiResponse(response: ApiResponse, shelfStatus: Int,IspopUp:Bool)
    {
        var bookInfoArray = [shelves.ViewModel.CellData]()
        var ViewModelObj:shelves.ViewModel
        
        let resultDict = response.result as! NSDictionary
        
        let bookArray = resultDict["books"] as! NSArray
        for arrData in bookArray {
            let bookDict = arrData as! NSDictionary
            let dataDict = bookDict["book"] as! NSDictionary
            
            let obj = shelves.ViewModel.CellData(cover_photo: dataDict["cover_photo"] as? String, review_count: dataDict["review_count"] as? Int, name: dataDict["name"] as? String, author_name: dataDict["author_name"] as? String, rating: dataDict["rating"] as? Double, is_favourite: (bookDict["is_favourite"] as? Bool)!, id: bookDict["id"] as? Int, bookId: bookDict["book_id"] as? Int, shelf_status: bookDict["shelf_status"] as? Int)
            
            bookInfoArray.append(obj)
            
        }
        ViewModelObj = shelves.ViewModel(collectionArray: bookInfoArray)
        
        if shelfStatus == 2 {
            viewController?.displayResponse(viewModel: ViewModelObj, isPopup:IspopUp)
        }
        else if shelfStatus == 0 {
            viewController?.displayShelfTypeResponse(viewModel: ViewModelObj,isPopup:IspopUp)
        }
        else {
            viewController?.displayContinueReadResponse(viewModel: ViewModelObj,isPopup:IspopUp)
        }
     
    }
}
