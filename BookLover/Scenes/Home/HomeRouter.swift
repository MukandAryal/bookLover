//
//  HomeRouter.swift
//  BookLover
//
//  Created by ios 7 on 07/05/18.
//  Copyright (c) 2018 iOS Team. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol HomeRoutingLogic
{
    //func routeToSomewhere(segue: UIStoryboardSegue?)
    func navigateToRatingView(bookId: String)
    func navigateToBookDetail(bookId: String)
    func navigateToAllReview(bookId: String)
    func navigateToAllBooks(withTitle: String, andCatId:String?, orderNo: String?)
    func navigateToBookShelves(withData: [String:Any])
}

protocol HomeDataPassing
{
    var dataStore: HomeDataStore? { get }
}

class HomeRouter: NSObject, HomeRoutingLogic, HomeDataPassing
{
    weak var viewController: HomeViewController?
    var dataStore: HomeDataStore?
    
    // MARK: Routing
    
    func navigateToAllBooks(withTitle: String, andCatId:String?, orderNo: String?) {
        
        let destinationVC = viewController?.storyboard?.instantiateViewController(withIdentifier: ViewControllerIds.AllBooks) as! AllBooksViewController
        
        var destinationDS = destinationVC.router!.dataStore!
        passDataToAllBooks(source: dataStore!,
                           destination: &destinationDS,
                           withTitle: withTitle,
                           andCatId: andCatId,
                           oderNo: orderNo)
        
        viewController?.navigationController?.pushViewController(destinationVC, animated: true)
    }
    
    func passDataToAllBooks(source: HomeDataStore,
                            destination: inout AllBooksDataStore,
                            withTitle: String,
                            andCatId:String?,
                            oderNo: String?)
    {
        destination.navTitle = withTitle
        destination.categoryId = andCatId
        destination.OrderNo = oderNo

    }
    
    func navigateToAllReview(bookId: String) {
        let destinationVC = viewController?.storyboard?.instantiateViewController(withIdentifier: ViewControllerIds.ShowAllReview) as! ShowAllReviewViewController
        var ds = destinationVC.router?.dataStore
        passDataToAllReview(bookId: bookId, destinationDS: &ds!)
        pushToAllReview(source: viewController!, destination: destinationVC)
    }
    
    func pushToAllReview(source: UIViewController, destination: UIViewController) {
        source.navigationController?.pushViewController(destination, animated: true)
    }
    
    func passDataToAllReview(bookId: String, destinationDS: inout ShowAllReviewDataStore)
    {
        destinationDS.bookId = bookId
    }
    
    
    func navigateToBookDetail(bookId: String) {
        let destinationVC = viewController?.storyboard?.instantiateViewController(withIdentifier: ViewControllerIds.BookDetail) as! BookDetailViewController
        var ds = destinationVC.router?.dataStore
        passDataToBookDetail(bookId: bookId, destinationDS: &ds!)
        pushToBookDetail(source: viewController!, destination: destinationVC)
    }
    
    func pushToBookDetail(source: UIViewController, destination: UIViewController) {
        source.navigationController?.pushViewController(destination, animated: true)
    }
    
    func passDataToBookDetail(bookId: String, destinationDS: inout BookDetailDataStore)
    {
       destinationDS.bookId = bookId
    }
    
    func navigateToBookShelves(withData: [String:Any]) {
        
        let destinationVC = viewController?.storyboard?.instantiateViewController(withIdentifier: ViewControllerIds.BookShelves) as! BookShelvesViewController
        destinationVC.dictShelfData = withData
        printToConsole(item: withData)
        destinationVC.callHomeDismiss = viewController?.performBookPopUpAction()
        let navCountry = UINavigationController(rootViewController: destinationVC)
        self.viewController?.present(navCountry, animated: true, completion: nil)
    }
    
    
    func navigateToRatingView(bookId: String) {
        let destinationVC = viewController?.storyboard?.instantiateViewController(withIdentifier: ViewControllerIds.Rating) as! RatingViewController
        var ds = destinationVC.router?.dataStore
        passDataToRatingView(bookId: bookId, destinationDS: &ds!)
        pushToRatingView(source: viewController!, destination: destinationVC)
    }
    
    func pushToRatingView(source: UIViewController, destination: UIViewController) {
        let toRating = UINavigationController(rootViewController: destination)
        source.present(toRating, animated: true, completion: nil)
    }
    
    func passDataToRatingView(bookId: String, destinationDS: inout RatingDataStore)
    {
        destinationDS.bookId = bookId
        destinationDS.isRatingEdit = false
    }
    
}
