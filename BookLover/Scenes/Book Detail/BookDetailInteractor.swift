//
//  BookDetailInteractor.swift
//  BookLover
//
//  Created by ios 7 on 28/05/18.
//  Copyright (c) 2018 iOS Team. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol BookDetailBusinessLogic
{
  func getBookDetail()
    func likeUnlikeReview(request: ShowAllReview.Request.LikeUnlike)
    func favUnfavoriteBook(request: BookDetail.Request.FavUnfavorite)

}

protocol BookDetailDataStore
{
  //var name: String { get set }
    var bookId : String? { get set }
}

class BookDetailInteractor: BookDetailBusinessLogic, BookDetailDataStore
{
    
  var bookId: String?
  var presenter: BookDetailPresentationLogic?
  var worker: BookDetailWorker?
  
    
  // MARK: Do something
  
  func getBookDetail()
  {
    worker = BookDetailWorker()
    worker?.hitBookDetailApi(bookId: bookId!, apiResponse: { (response) in
        self.presenter?.presentBookDetail(response: response)
    })
  }
    
    
    
    func likeUnlikeReview(request: ShowAllReview.Request.LikeUnlike) {
        
        let param:[String:Any] = ["review_id":request.reviewId!, "user_id":CommonFunctions.sharedInstance.getUserId(),"review_like":request.isLike!]
        
        CommonFunctions.sharedInstance.hitReviewLikeApi(parameters: param) { (response) in
            self.presenter?.presentLikeUnlikeResponse(response: response, atIndex: request.index!)
        }
    }
    
    func favUnfavoriteBook(request: BookDetail.Request.FavUnfavorite) {
        
        let param:[String:Any] = [
            "id":request.shelveId!,
            "user_id":CommonFunctions.sharedInstance.getUserId(),
            "is_favourite":request.status!]
        
        CommonFunctions.sharedInstance.hitFavouriteUnfavouriteApi(withData: param) { (response) in
            self.presenter?.presentFavUnfavoriteResponse(reponse: response)
        }
    }
}
