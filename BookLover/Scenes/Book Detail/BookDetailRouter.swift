//
//  BookDetailRouter.swift
//  BookLover
//
//  Created by ios 7 on 28/05/18.
//  Copyright (c) 2018 iOS Team. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol BookDetailRoutingLogic
{
  //func routeToSomewhere(segue: UIStoryboardSegue?)
    func navigateToShare(bookId: String)
    func navigateToRatingView(bookId: String)
    func navigateToUserReview(reviewId: String)
    func navigateToAllReview(bookId: String)
    func navigateToBookShelves(withData: [String:Any])
   // func navigateToUserProfile(withData: ProfileInfo.Data)
    func navigateToUserProfile(withId: String)
    func navigateToEditRating(bookId: String, rating: Double, desc: String)
}

protocol BookDetailDataPassing
{
  var dataStore: BookDetailDataStore? { get }
}

class BookDetailRouter: NSObject, BookDetailRoutingLogic, BookDetailDataPassing
{
  weak var viewController: BookDetailViewController?
  var dataStore: BookDetailDataStore?
  
  // MARK: Routing
  
    func navigateToShare(bookId: String) {
        let destinationVC = viewController?.storyboard?.instantiateViewController(withIdentifier: ViewControllerIds.ShareTheBook) as! ShareTheBookViewController
        var ds = destinationVC.router?.dataStore
        passDataToShare(bookId: bookId, destinationDS: &ds!)
        pushToShare(source: viewController!, destination: destinationVC)
    }
    
    func pushToShare(source: UIViewController, destination: UIViewController) {
        source.navigationController?.pushViewController(destination, animated: true)
    }
    
    func passDataToShare(bookId: String, destinationDS: inout ShareTheBookDataStore)
    {
        destinationDS.bookId = bookId
    }
    
    
    func navigateToEditRating(bookId: String, rating: Double, desc: String) {
        
        let destinationVC = viewController?.storyboard?.instantiateViewController(withIdentifier: ViewControllerIds.Rating) as! RatingViewController
        var ds = destinationVC.router?.dataStore
        passDataToEditRating(bookId: bookId, rating: rating, desc: desc, destinationDS: &ds!)
        pushToRatingView(source: viewController!, destination: destinationVC)
    }
    
    func passDataToEditRating(bookId: String, rating: Double, desc: String, destinationDS: inout RatingDataStore)
    {
        destinationDS.bookId = bookId
        destinationDS.description = desc
        destinationDS.rating = rating
        destinationDS.isRatingEdit = true
    }
    
    
    
    func navigateToRatingView(bookId: String) {
        let destinationVC = viewController?.storyboard?.instantiateViewController(withIdentifier: ViewControllerIds.Rating) as! RatingViewController
        var ds = destinationVC.router?.dataStore
        passDataToRatingView(bookId: bookId, destinationDS: &ds!)
        pushToRatingView(source: viewController!, destination: destinationVC)
    }
    
    func pushToRatingView(source: UIViewController, destination: UIViewController) {
        let toRating = UINavigationController(rootViewController: destination)
        source.present(toRating, animated: true, completion: nil)
    }
    
    func passDataToRatingView(bookId: String, destinationDS: inout RatingDataStore)
    {
        destinationDS.bookId = bookId
        destinationDS.isRatingEdit = false
    }
    
    
    func navigateToUserReview(reviewId: String) {
        let destinationVC = viewController?.storyboard?.instantiateViewController(withIdentifier: ViewControllerIds.UserReview) as! UserReviwViewController
        var ds = destinationVC.router?.dataStore
        passDataToUserReview(reviewId: reviewId, destinationDS: &ds!)
        pushToUserReview(source: viewController!, destination: destinationVC)
    }
    
    func pushToUserReview(source: UIViewController, destination: UIViewController) {
        source.navigationController?.pushViewController(destination, animated: true)
    }
    
    func passDataToUserReview(reviewId: String, destinationDS: inout UserReviwDataStore)
    {
        destinationDS.reviewId = reviewId
    }
    
    
    func navigateToAllReview(bookId: String) {
        let destinationVC = viewController?.storyboard?.instantiateViewController(withIdentifier: ViewControllerIds.ShowAllReview) as! ShowAllReviewViewController
        var ds = destinationVC.router?.dataStore
        passDataToAllReview(bookId: bookId, destinationDS: &ds!)
        pushToAllReview(source: viewController!, destination: destinationVC)
    }
    
    func pushToAllReview(source: UIViewController, destination: UIViewController) {
        source.navigationController?.pushViewController(destination, animated: true)
    }
    
    func passDataToAllReview(bookId: String, destinationDS: inout ShowAllReviewDataStore)
    {
        destinationDS.bookId = bookId
    }
    
    
    
    func navigateToBookShelves(withData: [String:Any]) {
        
        let destinationVC = viewController?.storyboard?.instantiateViewController(withIdentifier: ViewControllerIds.BookShelves) as! BookShelvesViewController
        destinationVC.dictShelfData = withData
        printToConsole(item: withData)
        destinationVC.callDetailDismiss = viewController?.performBookPopUpAction()
        let navCountry = UINavigationController(rootViewController: destinationVC)
        self.viewController?.present(navCountry, animated: true, completion: nil)
    }
    
    func navigateToUserProfile(withId: String) {
        let destinationVC = viewController?.storyboard?.instantiateViewController(withIdentifier: ViewControllerIds.UserProfile) as! ProfileViewController
        var ds = destinationVC.router?.dataStore
        passDataToProfile(withId: withId, destinationDS: &ds!)
        viewController?.navigationController?.pushViewController(destinationVC, animated: true)
    }
    
    func passDataToProfile(withId: String, destinationDS: inout ProfileDataStore)
    {
        destinationDS.userId = withId
        destinationDS.isFromSideMenu = false
    }

}
